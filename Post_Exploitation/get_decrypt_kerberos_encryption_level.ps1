#######################################################################################################################################################################
# Powershell that acquires the Kerberos encryption type: By 41ph4-01 23/04/2024 & our community. 
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the       
# Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, # and to permit persons to whom the Software is furnished to do
# so, subject to the following conditions: The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A  
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
########################################################################################################################################################################

# Import the Active Directory module
Import-Module ActiveDirectory

# Function to decode the msDS-SupportedEncryptionTypes attribute
function Get-ADSupportedEncryptionTypes {
    param (
        [int]$SupportedEncryptionTypes
    )
    
    $types = @()
    
    if ($SupportedEncryptionTypes -band 0x01) { $types += "DES-CBC-CRC" }
    if ($SupportedEncryptionTypes -band 0x02) { $types += "DES-CBC-MD5" }
    if ($SupportedEncryptionTypes -band 0x04) { $types += "RC4-HMAC" }
    if ($SupportedEncryptionTypes -band 0x08) { $types += "AES128-CTS-HMAC-SHA1-96" }
    if ($SupportedEncryptionTypes -band 0x10) { $types += "AES256-CTS-HMAC-SHA1-96" }
    if ($SupportedEncryptionTypes -band 0x20) { $types += "Future encryption type" }

    return $types
}

# Get all domain controllers in the domain
$domainControllers = Get-ADDomainController -Filter *

# Initialize an array to store results
$results = @()

foreach ($dc in $domainControllers) {
    # Get the supported encryption types attribute
    $encryptionTypes = Get-ADComputer -Identity $dc.HostName -Property msDS-SupportedEncryptionTypes

    # Decode the msDS-SupportedEncryptionTypes value
    $supportedEncryptionTypes = $encryptionTypes.'msDS-SupportedEncryptionTypes'
    $decodedTypes = if ($supportedEncryptionTypes -ne $null) {
        [string]::Join(", ", (Get-ADSupportedEncryptionTypes -SupportedEncryptionTypes $supportedEncryptionTypes))
    } else {
        "Not Set"
    }

    # Add the result to the array
    $results += [PSCustomObject]@{
        DomainController       = $dc.HostName
        SupportedEncryptionTypes = $supportedEncryptionTypes
        Explanation            = $decodedTypes
    }
}

# Output the results
$results | Format-Table -AutoSize

#######################################################################################################################################################################################
# Imports the Active Directory module: This ensures that the necessary cmdlets for interacting with Active Directory are available.
# Defines the Get-ADSupportedEncryptionTypes function: This function takes an integer representing the supported encryption types and returns a list of human-readable encryption types.
# Retrieves all domain controllers: The script uses Get-ADDomainController to get a list of all domain controllers in the domain.
# Queries the msDS-SupportedEncryptionTypes attribute: For each domain controller, the script retrieves the msDS-SupportedEncryptionTypes attribute using Get-ADComputer.
# Decodes the encryption types: The script calls the Get-ADSupportedEncryptionTypes function to decode the attribute value into a readable format.
# Stores and display the results: The script stores the results in an array of custom objects and then formats the output as a table.
########################################################################################################################################################################################
