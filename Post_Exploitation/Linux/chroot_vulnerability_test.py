###########################################################################################################################################################################################################
# Python script that checks for the presence of high-risk executables within the jail. Runs with python3 path/to/chroot_vulnerability_test.py
# Attempts to move up directories repeatedly and checks if it ends up outside the initial jail root, indicating a potential escape route. Warns if the 
# script is running with root privileges. Checks if /proc or /dev/pts are mounted,
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software 
# without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons 
# to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial 
# portions of the Software.
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE 
# AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
###########################################################################################################################################################################################################

import os
import subprocess

# Banner for the framework
def display_splash_screen():
    splash = """
  
    
_________  .__                         __    ____   ____     .__                               ___.   .__.__   .__   __               ___________                __                 _____  ____.____   __________  ___ ___    _____           _______  ____ 
\_   ___ \ |  |_________  ____   _____/  |_  \   \ /   /__ __|  |    ____   ____ ____________  \_ |__ |__|  |  |__|_/  |_  ___.__.    \__    ___/____    _______/  |_              /  |  |/_   |    |  \______   \/   |   \  /  |  |          \   _  \/_   |
/    \  \/ |  |  \_  __ \/  _ \ /  _ \   __\  \   Y   /|  |  \  |   /    \_/ __ \\_  __ \__  \  | __ \|  |  |  |  |\   __\<   |  |      |    | _/ __ \  /  ___/\   __\   ______   /   |  |_|   |    |   |     ___/    ~    \/   |  |_  ______ /  /_\  \|   |
\     \____|   Y  \  | \(  <_> |  <_> )  |     \     / |  |  /  |__|   |  \  ___/ |  | \// __ \_| \_\ \  |  |__|  | |  |   \___  |      |    | \  ___/  \___ \  |  |    /_____/  /    ^   /|   |    |___|    |   \    Y    /    ^   / /_____/ \  \_/   \   |
 \______  /|___|  /__|   \____/ \____/|__|______\___/  |____/|____/|___|  /\___  >|__|  (____  /|___  /__|____/|__| |__|   / ____|______|____|  \___  >/____  > |__|             \____   | |___|_______ \____|    \___|_  /\____   |           \_____  /___|
        \/      \/                       /_____/                        \/     \/            \/     \/                     \/    /_____/            \/      \/                        |__|             \/               \/      |__|                 \/     

                                                     _:_
                                                    '-.-'
                                           ()      __.'.__
                                        .-:--:-.  |_______|
                                 ()      \____/    \=====/
                                 /\      {====}     )___(
                      (\=,      //\\      )__(     /_____\
      __    |'-'-'|  //  .\    (    )    /____\     |   |
     /  \   |_____| (( \_  \    )__(      |  |      |   |
     \__/    |===|   ))  `\_)  /____\     |  |      |   |
    /____\   |   |  (/     \    |  |      |  |      |   |
     |  |    |   |   | _.-'|    |  |      |  |      |   |
     |__|    )___(    )___(    /____\    /____\    /_____\
    (====)  (=====)  (=====)  (======)  (======)  (=======)
    }===={  }====={  }====={  }======{  }======{  }======={
   (______)(_______)(_______)(________)(________)(_________)
   
 
"""

    print(splash)
    print("Chroot_Vulnerability_Test 41PH4-01\n")


def check_executable_access(executables):
    """Check if critical executables are accessible within the chroot."""
    accessible = []
    for exe in executables:
        if os.path.exists(exe):
            accessible.append(exe)
    return accessible

def check_directory_traversal():
    """Check if directory traversal up outside the jail is restricted."""
    initial_dir = os.getcwd()
    try:
        # Attempt to change directory up to see if we stay contained in the jail
        for _ in range(10):  # Arbitrarily try 10 levels up
            os.chdir("..")
        final_dir = os.getcwd()
        return initial_dir != final_dir  # If we end up outside, it’s potentially unsafe
    except PermissionError:
        return False
    finally:
        os.chdir(initial_dir)  # Return to the initial directory

def check_privileges():
    """Check if the script is running with root privileges (should be avoided)."""
    return os.geteuid() == 0

def check_mount_points():
    """Verify if /proc or /dev/pts are mounted, indicating isolation issues."""
    mount_points = subprocess.getoutput("mount")
    return any(mnt in mount_points for mnt in ["/proc", "/dev/pts"])

# List of high-risk executables to check for within the chroot
risky_executables = ["/bin/bash", "/bin/sh", "/usr/bin/python3", "/usr/bin/sudo"]

# Run checks
print("Starting chroot vulnerability test...\n")

if check_privileges():
    print("Warning: This script is running with root privileges, which can be unsafe in a chrooted environment.")

accessible_exes = check_executable_access(risky_executables)
if accessible_exes:
    print(f"Vulnerable: The following risky executables are accessible in the chroot: {accessible_exes}")
else:
    print("Pass: No risky executables accessible in the chroot.")

if check_directory_traversal():
    print("Vulnerable: Directory traversal outside the chroot jail is possible.")
else:
    print("Pass: Directory traversal outside the chroot jail is restricted.")

if check_mount_points():
    print("Warning: /proc or /dev/pts is mounted in the chroot environment, which could indicate poor isolation.")
else:
    print("Pass: No mount points indicating weak isolation detected.")

print("\nChroot vulnerability test completed.")

