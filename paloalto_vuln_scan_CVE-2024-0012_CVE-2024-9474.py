######################################################################################################################################################################################################################
# Initial python script for vulnerabilities PaloAlto CVE-2024-0012 & CVE-2024-9474 , and does not constitute or replace a robust vulnerability scanner. Note: Be mindful of the scope of work, & rules of engagement.
# Replace <TARGET_IP_OR_DOMAIN> with the actual target's IP or domain.
# Adjust the payloads and error codes based on the specifics of your testing setup.
# Run the script 
# python paloalto_vuln_scan_CVE-2024-0012_CVE-2024-9474.py.
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software 
# without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons 
# to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial 
# portions of the Software.
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE 
# AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
######################################################################################################################################################################################################################



import requests

def display_splash_screen():
    splash = """
    
__________         .__              _____   .__    __              _________ ____   _______________       ________ _______   ________     _____         _______   _______   ____ ________        _________ ____   _______________       ________ _______   ________     _____          ________   _____ _________   _____      
\______   \_____   |  |    ____    /  _  \  |  | _/  |_  ____      \_   ___ \\   \ /   /\_   _____/       \_____  \\   _  \  \_____  \   /  |  |        \   _  \  \   _  \ /_   |\_____  \       \_   ___ \\   \ /   /\_   _____/       \_____  \\   _  \  \_____  \   /  |  |        /   __   \ /  |  |\______  \ /  |  |     
 |     ___/\__  \  |  |   /  _ \  /  /_\  \ |  | \   __\/  _ \     /    \  \/ \   Y   /  |    __)_  ______ /  ____//  /_\  \  /  ____/  /   |  |_ ______/  /_\  \ /  /_\  \ |   | /  ____/       /    \  \/ \   Y   /  |    __)_  ______ /  ____//  /_\  \  /  ____/  /   |  |_ ______\____    //   |  |_   /    //   |  |_    
 |    |     / __ \_|  |__(  <_> )/    |    \|  |__|  | (  <_> )    \     \____ \     /   |        \/_____//       \\  \_/   \/       \ /    ^   //_____/\  \_/   \\  \_/   \|   |/       \       \     \____ \     /   |        \/_____//       \\  \_/   \/       \ /    ^   //_____/   /    //    ^   /  /    //    ^   /    
 |____|    (____  /|____/ \____/ \____|__  /|____/|__|  \____/______\______  /  \___/   /_______  /       \_______ \\_____  /\_______ \\____   |         \_____  / \_____  /|___|\_______ \ ______\______  /  \___/   /_______  /       \_______ \\_____  /\_______ \\____   |          /____/ \____   |  /____/ \____   |     
                \/                       \/                  /_____/       \/                   \/                \/      \/         \/     |__|               \/        \/              \//_____/       \/                   \/                \/      \/         \/     |__|                      |__|              |__|     
                                                                                                                                                                                                                                                                                                                               

               _____  ____         .__        _____         _______   ____     
              /  |  |/_   |______  |  |__    /  |  |        \   _  \ /_   |    
  ______     /   |  |_|   |\____ \ |  |  \  /   |  |_ ______/  /_\  \ |   |    
 /_____/    /    ^   /|   ||  |_> >|   Y  \/    ^   //_____/\  \_/   \|   |    
            \____   | |___||   __/ |___|  /\____   |         \_____  /|___|    
                 |__|      |__|         \/      |__|               \/      
 
                                                     _:_
                                                    '-.-'
                                           ()      __.'.__
                                        .-:--:-.  |_______|
                                 ()      \____/    \=====/
                                 /\      {====}     )___(
                      (\=,      //\\      )__(     /_____\
      __    |'-'-'|  //  .\    (    )    /____\     |   |
     /  \   |_____| (( \_  \    )__(      |  |      |   |
     \__/    |===|   ))  `\_)  /____\     |  |      |   |
    /____\   |   |  (/     \    |  |      |  |      |   |
     |  |    |   |   | _.-'|    |  |      |  |      |   |
     |__|    )___(    )___(    /____\    /____\    /_____\
    (====)  (=====)  (=====)  (======)  (======)  (=======)
    }===={  }====={  }====={  }======{  }======{  }======={
   (______)(_______)(_______)(________)(________)(_________)
   
 
"""

    print(splash)
    print("Web Application Tool 41PH4-01\n")

# Disable SSL warnings for testing purposes (remove in production)
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# Configuration
TARGET_URL = "https://<TARGET_IP_OR_DOMAIN>"  # Replace with target
TEST_ENDPOINTS = ["/api/", "/admin", "/login"]  # Common management paths
HEADERS = {"User-Agent": "Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv 11.0) like Gecko"}

# Known patterns or responses indicating vulnerabilities
VULNERABILITY_INDICATORS = {
    "CVE-2024-0012": {
        "description": "Authentication bypass vulnerability",
        "test_response_text": ["admin login successful", "configuration modified without auth"],
    },
    "CVE-2024-9474": {
        "description": "Privilege escalation vulnerability",
        "test_payload": {"username": "admin", "password": "any"},  # Replace with safe test values
        "expected_error_code": 403,  # Error code if privilege escalation is blocked
    },
}

def check_auth_bypass(url):
    try:
        response = requests.get(url, headers=HEADERS, verify=False, timeout=10)
        for text in VULNERABILITY_INDICATORS["CVE-2024-0012"]["test_response_text"]:
            if text in response.text:
                return True, response.text
        return False, response.text
    except Exception as e:
        print(f"[!] Error checking {url} for auth bypass: {e}")
        return False, str(e)

def check_privilege_escalation(url):
    try:
        payload = VULNERABILITY_INDICATORS["CVE-2024-9474"]["test_payload"]
        response = requests.post(url, data=payload, headers=HEADERS, verify=False, timeout=10)
        if response.status_code != VULNERABILITY_INDICATORS["CVE-2024-9474"]["expected_error_code"]:
            return True, response.text
        return False, response.text
    except Exception as e:
        print(f"[!] Error checking {url} for privilege escalation: {e}")
        return False, str(e)

def main():
    print("[*] Starting scan for vulnerabilities...")
    for endpoint in TEST_ENDPOINTS:
        full_url = f"{TARGET_URL}{endpoint}"
        print(f"[*] Testing endpoint: {full_url}")

        # Test for CVE-2024-0012
        is_vulnerable, details = check_auth_bypass(full_url)
        if is_vulnerable:
            print(f"[!] Vulnerable to CVE-2024-0012 at {full_url}")
            print(f"    Details: {details}")
        else:
            print(f"[-] No signs of CVE-2024-0012 at {full_url}")

        # Test for CVE-2024-9474
        is_vulnerable, details = check_privilege_escalation(full_url)
        if is_vulnerable:
            print(f"[!] Vulnerable to CVE-2024-9474 at {full_url}")
            print(f"    Details: {details}")
        else:
            print(f"[-] No signs of CVE-2024-9474 at {full_url}")

if __name__ == "__main__":
    main()


